plugins {
    id 'java'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
//    id "io.freefair.lombok" version "6.3.0"
}
group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}


sourceSets {
    main {
        java {
            srcDirs += "$buildDir/generated/sources/annotationProcessor/java/main"
        }
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_16
    targetCompatibility = JavaVersion.VERSION_16
}

configurations {
    querydsl.extendsFrom implementation, runtimeOnly, compileOnly
}

ext{
    hibernateCoreVersion = '5.5.6.Final'
    postgresqlVersion = '42.5.4'
    hibernateTypesVersion = '2.12.1'
    hibernateJcacheVersion = '5.5.7.Final'
    slf4jApiVersion = '1.7.32'
    slf4jLog4j12Version = '1.7.32'
    projectLombokVersion = '1.18.26'
    junitJupiterVersion = '5.8.1'
    junitJupiterParams = '5.8.2'
    assertjCoreVersion = '3.23.1'
    javaxAnnotationApiVersion = '1.3.2'
    querydslJpaVersion = '5.0.0'
    querydslAptVersion = '5.0.0'
    jakartaAnnotationApiVersion = '1.3.5'
    springCoreVersion = '5.3.13'
    springContextVersion = '5.3.13'
    javaxInjectVersion = '1'
    ehcache = '3.9.7'
    h2database = '1.4.200'
}

dependencies {
    implementation "org.hibernate:hibernate-core:${hibernateCoreVersion}"
    runtimeOnly "org.postgresql:postgresql:${postgresqlVersion}"
    implementation "com.vladmihalcea:hibernate-types-52:${hibernateTypesVersion}"
    implementation "org.slf4j:slf4j-api:${slf4jApiVersion}"
    implementation "org.slf4j:slf4j-log4j12:${slf4jLog4j12Version}"

    implementation "org.springframework:spring-core:${springCoreVersion}"
    implementation "org.springframework:spring-context:${springContextVersion}"
    implementation "jakarta.annotation:jakarta.annotation-api:${jakartaAnnotationApiVersion}"
    implementation "javax.inject:javax.inject:${javaxInjectVersion}"


    implementation "javax.annotation:javax.annotation-api:${javaxAnnotationApiVersion}"
    implementation "com.querydsl:querydsl-jpa:${querydslJpaVersion}"
    annotationProcessor "com.querydsl:querydsl-apt:${querydslAptVersion}"

    compileOnly "org.projectlombok:lombok:${projectLombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${projectLombokVersion}"

    implementation "org.hibernate:hibernate-jcache:${hibernateJcacheVersion}"
    implementation "org.ehcache:ehcache:${ehcache}"

    testCompileOnly "org.projectlombok:lombok:${projectLombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${projectLombokVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitJupiterVersion}"
    testImplementation "org.assertj:assertj-core:${assertjCoreVersion}"

//    testImplementation 'org.mockito:mockito-junit-jupiter:4.11.0'
    testImplementation "com.h2database:h2:${h2database}"
}

querydsl {
    jpa = true
    querydslSourcesDir = "$buildDir/generated/sources/annotationProcessor/java/main"
}

compileQuerydsl {
//    enabled = false
    options.annotationProcessorPath = configurations.querydsl
}

compileQuerydsl.dependsOn(clean)

test {
    useJUnitPlatform()
}